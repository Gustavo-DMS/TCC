services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/node_modules:/app/node_modules
      - ./frontend/lib:/app/lib
    ports:
      - 3000:3000
    # depends_on:
    #   db:
    #     condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: flask.Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - 4000:4000
    env_file:
      - .env
    environment:
      - FLASK_DEBUG=1

  db:
    build:
      context: .
      dockerfile: db.Dockerfile
    restart: always
    user: postgres
    # secrets:
    #   - db-password
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
# secrets:
#   db-password:
#     environment: db-password
